{"remainingRequest":"E:\\idea\\gwc\\node_modules\\babel-loader\\lib\\index.js!E:\\idea\\gwc\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\idea\\gwc\\src\\store\\index.js","dependencies":[{"path":"E:\\idea\\gwc\\src\\store\\index.js","mtime":1629889571299},{"path":"E:\\idea\\gwc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\idea\\gwc\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\idea\\gwc\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIC8vc3RhdGXlsLHmmK/lhbHkuqvnmoTmlbDmja4KICBzdGF0ZTogewogICAgdXNlcjogewogICAgICB1c2VybmFtZTogbnVsbCwKICAgICAgcGFzc3dvcmQ6IG51bGwsCiAgICAgIHJlYWxOYW1lOiBudWxsLAogICAgICBpZDogbnVsbCwKICAgICAgYXZhdGFyOiBudWxsLAogICAgICBhZGRyZXNzTGlzdDogbnVsbCwKICAgICAgYWNjZXNzX3Rva2VuOiBudWxsLAogICAgICByZWZyZXNoX3Rva2VuOiBudWxsCiAgICB9CiAgfSwKICAvL+W9k+aIkeS7rOebtOaOpeiwg+eUqHN0b3JlLnN0YXRl5Lit55qE5pWw5o2u5pe2LCDkvJrkuI3lj6/pgb/lhY3nmoTkuqfnlJ/mlbDmja7lronlhajnmoTpl67popgsIOacieaXtuWAmeWHuuS6humUmSzmiJHku6zmoLnmnKzkuI3nn6XpgZPmmK/osIHkv67mlLnkuobov5nkuKrmlbDmja4KICAvL+aJgOS7pSwg5oiR5Lus5bqU6K+l5L2/55SoZ2V05ZKMc2V0LCDkuZ/lsLHmmK9nZXR0ZXJz5ZKMbXV0YXRpb25zK2FjdGlvbnMKICAvL3N0YXRl5Lit55qE5q+P5LiA5Liq5a+56LGh6YO95bqU6K+l5pyJ5a+55bqU55qEZ2V0dGVyCiAgZ2V0dGVyczogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcjsKICAgIH0sCiAgICB1c2VybmFtZTogZnVuY3Rpb24gdXNlcm5hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIudXNlcm5hbWU7CiAgICB9LAogICAgcGFzc3dvcmQ6IGZ1bmN0aW9uIHBhc3N3b3JkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyLnBhc3N3b3JkOwogICAgfSwKICAgIHJlYWxOYW1lOiBmdW5jdGlvbiByZWFsTmFtZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlci5yZWFsTmFtZTsKICAgIH0sCiAgICBpZDogZnVuY3Rpb24gaWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIuaWQ7CiAgICB9LAogICAgYXZhdGFyOiBmdW5jdGlvbiBhdmF0YXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIuYXZhdGFyOwogICAgfSwKICAgIGFkZHJlc3NMaXN0OiBmdW5jdGlvbiBhZGRyZXNzTGlzdChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlci5hZGRyZXNzTGlzdDsKICAgIH0sCiAgICBhY2Nlc3NfdG9rZW46IGZ1bmN0aW9uIGFjY2Vzc190b2tlbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlci5hY2Nlc3NfdG9rZW47CiAgICB9LAogICAgcmVmcmVzaF90b2tlbjogZnVuY3Rpb24gcmVmcmVzaF90b2tlbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlci5yZWZyZXNoX3Rva2VuOwogICAgfQogIH0sCiAgLy/mm7TmlLlzdG9yZeS4reeahOaVsOaNruWUr+S4gOeahOaWueW8j+WwseaYryDmj5DkuqQgbXV0YXRpb24KICAvL211dGF0aW9uc+mHjOmdouWGmeeahOaYr+S4gOS4quS4quS/ruaUueaVsOaNrueahOaWueazlQogIG11dGF0aW9uczogewogICAgLy/mr4/kuKptdXRhdGlvbuS4reeahOesrOS4gOWPguaVsOmDveW6lOivpeaYr3N0YXRlCiAgICBTRVJfVVNFUl9JTkZPOiBmdW5jdGlvbiBTRVJfVVNFUl9JTkZPKHN0YXRlLCB1c2VySW5mbykgewogICAgICBzdGF0ZS51c2VyID0gdXNlckluZm87CiAgICB9LAogICAgU0VSX1VTRVJOQU1FOiBmdW5jdGlvbiBTRVJfVVNFUk5BTUUoc3RhdGUsIHVzZXJuYW1lKSB7CiAgICAgIHN0YXRlLnVzZXIudXNlcm5hbWUgPSB1c2VybmFtZTsKICAgIH0sCiAgICBTRVJfUEFTU1dPUkQ6IGZ1bmN0aW9uIFNFUl9QQVNTV09SRChzdGF0ZSwgcGFzc3dvcmQpIHsKICAgICAgc3RhdGUudXNlci5wYXNzd29yZCA9IHBhc3N3b3JkOwogICAgfSwKICAgIFNFVF9SRUFMX05BTUU6IGZ1bmN0aW9uIFNFVF9SRUFMX05BTUUoc3RhdGUsIHJlYWxOYW1lKSB7CiAgICAgIHN0YXRlLnVzZXIucmVhbE5hbWUgPSByZWFsTmFtZTsKICAgIH0sCiAgICBTRVRfSUQ6IGZ1bmN0aW9uIFNFVF9JRChzdGF0ZSwgaWQpIHsKICAgICAgc3RhdGUudXNlci5pZCA9IGlkOwogICAgfSwKICAgIFNFVF9BVkFUQVI6IGZ1bmN0aW9uIFNFVF9BVkFUQVIoc3RhdGUsIGF2YXRhcikgewogICAgICBzdGF0ZS51c2VyLmF2YXRhciA9IGF2YXRhcjsKICAgIH0sCiAgICBTRVRfQUREUkVTU19MSVNUOiBmdW5jdGlvbiBTRVRfQUREUkVTU19MSVNUKHN0YXRlLCBhZGRyZXNzTGlzdCkgewogICAgICBzdGF0ZS51c2VyLmFkZHJlc3NMaXN0ID0gYWRkcmVzc0xpc3Q7CiAgICB9LAogICAgU0VUX0FDQ0VTU19UT0tFTjogZnVuY3Rpb24gU0VUX0FDQ0VTU19UT0tFTihzdGF0ZSwgYWNjZXNzX3Rva2VuKSB7CiAgICAgIHN0YXRlLnVzZXIuYWNjZXNzX3Rva2VuID0gYWNjZXNzX3Rva2VuOwogICAgfSwKICAgIFNFVF9SRUZSRVNIX1RPS0VOOiBmdW5jdGlvbiBTRVRfUkVGUkVTSF9UT0tFTihzdGF0ZSwgcmVmcmVzaF90b2tlbikgewogICAgICBzdGF0ZS51c2VyLnJlZnJlc2hfdG9rZW4gPSByZWZyZXNoX3Rva2VuOwogICAgfQogIH0sCiAgLy9hY3Rpb27ph4zpnaLlhpnnmoTmmK/lvojlpJptdXRhdGlvbnPnmoTpm4blkIgKICAvL+avlOWmgueUqOaIt+eZu+W9leS5i+WQjizkvJrku47lkI7lj7DojrflvpfkuIDkuKrnlKjmiLfkv6Hmga/lr7nosaEsIOi/meS4quWvueixoeWMheaLrOS6hueUqOaIt+WQjSxpZOetieWfuuehgOS/oeaBrywg5ZKM55So5oi355qE5aeT5ZCN562J5ouT5bGV5L+h5oGvLCDku6Xlj4rnlKjmiLflh63or4HnrYnlronlhajkv6Hmga8KICAvL+i/meS6m+S/oeaBr+mcgOimgeavj+S4qumDvXNldOi/m3N0b3Jl5Lit55qEdXNlcuWvueixoeS4rSwg5L2G5piv5q+P5Liq5L+h5oGv55qE5L+u5pS55pa55rOV6YO95bey57uP5ZyobXVzdGFpb25z6YeM5YaZ5q275LqGLCDmiJHku6zopoHlgZrnmoTlhbblrp7mmK/liJvlu7rkuIDkuKrmlrDnmoRhY3Rpb24s5Zyo5YW25Lit5o+Q5Lqk5aSa5LiqbXV0YXRpb24KICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHZhciB1c2VySW5mbyA9IHsKICAgICAgICB1c2VybmFtZTogIkNhcmEiLAogICAgICAgIHBhc3N3b3JkOiAiamlhemhpaGFuIiwKICAgICAgICByZWFsTmFtZTogIui0vuaZuua2tSIsCiAgICAgICAgaWQ6ICIxMTQ3ODI0IiwKICAgICAgICBhdmF0YXI6ICJodHRwczovL3ZpZGVvLmNvZGVzZWVkaW5nLmNvbS9pbWFnZS9kZWZhdWx0L0FFMDM4NjU2MDg0NDRDQjM4OUJBMDMzNENENjdGMUFDLTYtMi5qcGciLAogICAgICAgIGFkZHJlc3NMaXN0OiBbIuW5v+S4nOecgeW5v+W3nuW4guWkqeays+WMuuajoOS4i+ihl+mBk+W/q+S5kOaYn+eQgyIsICLnlJjogoPnnIHlhbDlt57luILkuIPph4zmsrPljLrpk7blhYnot6/lrp3lrp3oirHlm601LTEiXSwKICAgICAgICBhY2Nlc3NfdG9rZW46ICJramFuZGthd2RsYXdrZGJhd25vZGF3ZGxrYXdsZGttYXdsa2RtYWx3bWRhd2RsYWwiLAogICAgICAgIHJlZnJlc2hfdG9rZW46ICJramFuZGthd2RsYXdrZGJhd25vZGF3ZGxrYXdsZGttYXdsa2RtYWx3bWRhd2RsYWwiCiAgICAgIH07CiAgICAgIGNvbW1pdCgnU0VSX1VTRVJOQU1FJywgdXNlckluZm8udXNlcm5hbWUpOwogICAgICBjb21taXQoJ1NFUl9QQVNTV09SRCcsIHVzZXJJbmZvLnBhc3N3b3JkKTsKICAgICAgY29tbWl0KCdTRVRfUkVBTF9OQU1FJywgdXNlckluZm8ucmVhbE5hbWUpOwogICAgICBjb21taXQoJ1NFVF9JRCcsIHVzZXJJbmZvLmlkKTsKICAgICAgY29tbWl0KCdTRVRfQVZBVEFSJywgdXNlckluZm8uYXZhdGFyKTsKICAgICAgY29tbWl0KCdTRVRfQUREUkVTU19MSVNUJywgdXNlckluZm8uYWRkcmVzc0xpc3QpOwogICAgICBjb21taXQoJ1NFVF9BQ0NFU1NfVE9LRU4nLCB1c2VySW5mby5hY2Nlc3NfdG9rZW4pOwogICAgICBjb21taXQoJ1NFVF9SRUZSRVNIX1RPS0VOJywgdXNlckluZm8ucmVmcmVzaF90b2tlbik7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVJfVVNFUk5BTUUnLCAnJyk7CiAgICAgIGNvbW1pdCgnU0VSX1BBU1NXT1JEJywgJycpOwogICAgICBjb21taXQoJ1NFVF9SRUFMX05BTUUnLCAnJyk7CiAgICAgIGNvbW1pdCgnU0VUX0lEJywgJycpOwogICAgICBjb21taXQoJ1NFVF9BVkFUQVInLCAnJyk7CiAgICAgIGNvbW1pdCgnU0VUX0FERFJFU1NfTElTVCcsICcnKTsKICAgICAgY29tbWl0KCdTRVRfQUNDRVNTX1RPS0VOJywgJycpOwogICAgICBjb21taXQoJ1NFVF9SRUZSRVNIX1RPS0VOJywgJycpOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfSk7"},{"version":3,"sources":["E:/idea/gwc/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","user","username","password","realName","id","avatar","addressList","access_token","refresh_token","getters","mutations","SER_USER_INFO","userInfo","SER_USERNAME","SER_PASSWORD","SET_REAL_NAME","SET_ID","SET_AVATAR","SET_ADDRESS_LIST","SET_ACCESS_TOKEN","SET_REFRESH_TOKEN","actions","login","commit","logout","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\nexport default new Vuex.Store({\r\n    //state就是共享的数据\r\n    state: {\r\n        user: {\r\n            username:null,\r\n            password:null,\r\n            realName:null,\r\n            id:null,\r\n            avatar:null,\r\n            addressList:null,\r\n            access_token:null,\r\n            refresh_token:null\r\n        }\r\n    },\r\n    //当我们直接调用store.state中的数据时, 会不可避免的产生数据安全的问题, 有时候出了错,我们根本不知道是谁修改了这个数据\r\n    //所以, 我们应该使用get和set, 也就是getters和mutations+actions\r\n    //state中的每一个对象都应该有对应的getter\r\n    getters: {\r\n        user: state => {\r\n            return state.user\r\n        },\r\n        username: state => {\r\n            return state.user.username\r\n        },\r\n        password: state => {\r\n            return state.user.password\r\n        },\r\n        realName: state => {\r\n            return state.user.realName\r\n        },\r\n        id: state => {\r\n            return state.user.id\r\n        },\r\n        avatar: state => {\r\n            return state.user.avatar\r\n        },\r\n        addressList: state => {\r\n            return state.user.addressList\r\n        },\r\n        access_token: state => {\r\n            return state.user.access_token\r\n        },\r\n        refresh_token: state => {\r\n            return state.user.refresh_token\r\n        },\r\n    },\r\n    //更改store中的数据唯一的方式就是 提交 mutation\r\n    //mutations里面写的是一个个修改数据的方法\r\n    mutations: {\r\n        //每个mutation中的第一参数都应该是state\r\n        SER_USER_INFO(state,userInfo) {\r\n            state.user = userInfo\r\n        },\r\n        SER_USERNAME(state,username) {\r\n            state.user.username = username\r\n        },\r\n        SER_PASSWORD(state,password) {\r\n            state.user.password = password\r\n        },\r\n        SET_REAL_NAME(state,realName) {\r\n            state.user.realName = realName\r\n        },\r\n        SET_ID(state,id) {\r\n            state.user.id = id\r\n        },\r\n        SET_AVATAR(state,avatar) {\r\n            state.user.avatar = avatar\r\n        },\r\n        SET_ADDRESS_LIST(state,addressList) {\r\n            state.user.addressList = addressList\r\n        },\r\n        SET_ACCESS_TOKEN(state,access_token) {\r\n            state.user.access_token = access_token\r\n        },\r\n        SET_REFRESH_TOKEN(state,refresh_token) {\r\n            state.user.refresh_token = refresh_token\r\n        }\r\n    },\r\n    //action里面写的是很多mutations的集合\r\n    //比如用户登录之后,会从后台获得一个用户信息对象, 这个对象包括了用户名,id等基础信息, 和用户的姓名等拓展信息, 以及用户凭证等安全信息\r\n    //这些信息需要每个都set进store中的user对象中, 但是每个信息的修改方法都已经在mustaions里写死了, 我们要做的其实是创建一个新的action,在其中提交多个mutation\r\n    actions: {\r\n        login({ commit }) {\r\n            let userInfo = {\r\n                username : \"Cara\",\r\n                password : \"jiazhihan\",\r\n                realName : \"贾智涵\",\r\n                id: \"1147824\",\r\n                avatar: \"https://video.codeseeding.com/image/default/AE03865608444CB389BA0334CD67F1AC-6-2.jpg\",\r\n                addressList:[\"广东省广州市天河区棠下街道快乐星球\",\"甘肃省兰州市七里河区银光路宝宝花园5-1\"],\r\n                access_token: \"kjandkawdlawkdbawnodawdlkawldkmawlkdmalwmdawdlal\",\r\n                refresh_token: \"kjandkawdlawkdbawnodawdlkawldkmawlkdmalwmdawdlal\"\r\n            }\r\n            commit('SER_USERNAME', userInfo.username)\r\n            commit('SER_PASSWORD', userInfo.password)\r\n            commit('SET_REAL_NAME', userInfo.realName)\r\n            commit('SET_ID', userInfo.id)\r\n            commit('SET_AVATAR', userInfo.avatar)\r\n            commit('SET_ADDRESS_LIST', userInfo.addressList)\r\n            commit('SET_ACCESS_TOKEN', userInfo.access_token)\r\n            commit('SET_REFRESH_TOKEN', userInfo.refresh_token)\r\n        },\r\n        logout({ commit }) {\r\n            commit('SER_USERNAME', '')\r\n            commit('SER_PASSWORD', '')\r\n            commit('SET_REAL_NAME', '')\r\n            commit('SET_ID', '')\r\n            commit('SET_AVATAR', '')\r\n            commit('SET_ADDRESS_LIST', '')\r\n            commit('SET_ACCESS_TOKEN', '')\r\n            commit('SET_REFRESH_TOKEN', '')\r\n        }\r\n    },\r\n    modules: {\r\n    }\r\n})\r\n"]}]}