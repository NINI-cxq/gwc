{"remainingRequest":"E:\\idea\\gwc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\idea\\gwc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\idea\\gwc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\idea\\gwc\\src\\components\\navigation.vue?vue&type=template&id=09d1a3b8&scoped=true&","dependencies":[{"path":"E:\\idea\\gwc\\src\\components\\navigation.vue","mtime":1630032757455},{"path":"E:\\idea\\gwc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\idea\\gwc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\idea\\gwc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\idea\\gwc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}